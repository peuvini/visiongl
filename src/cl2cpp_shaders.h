
/*********************************************************************
***                                                                 ***
***  Source code generated by cl2cpp.pl                             ***
***                                                                 ***
***  Please do not edit                                             ***
***                                                                 ***
*********************************************************************/
#include "vglImage.h"

#include "vglShape.h"

#include "vglStrEl.h"

/** Convolution of src image by mask. Result is stored in dst image.
    
    In some OpenCL versions, the next directive is required
    #pragma OPENCL EXTENSION cl_khr_3d_image_writes : enable

  */
void vglCl3dBlurSq3(VglImage* img_input, VglImage* img_output);

/** Convolution of src image by mask. Result is stored in dst image.

  */
void vglCl3dConvolution(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Direct copy from src to dst.

  */
void vglCl3dCopy(VglImage* img_input, VglImage* img_output);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglCl3dErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y, int window_size_z);

/** Direct copy from src to dst.

  */
void vglCl3dMax(VglImage* img_input1, VglImage* img_input2, VglImage* img_output);

/** Direct copy from src to dst.

  */
void vglCl3dMin(VglImage* img_input1, VglImage* img_input2, VglImage* img_output);

/** Direct copy from src to dst.

  */
void vglCl3dNot(VglImage* img_input, VglImage* img_output);

/** Direct copy from src to dst.

  */
void vglCl3dSub(VglImage* img_input1, VglImage* img_input2, VglImage* img_output);

/** Direct copy from src to dst.

  */
void vglCl3dSum(VglImage* img_input1, VglImage* img_input2, VglImage* img_output);

/** Threshold of src image by float parameter. if the pixel is below thresh,
    the output is 0, else, the output is top. Result is stored in dst image.
  */
void vglCl3dThreshold(VglImage* src, VglImage* dst, float thresh, float top = 1.0);

/** Convolution of src image by mask. Result is stored in dst image.

  */
void vglClBlurSq3(VglImage* img_input, VglImage* img_output);

/** Convolution of src image by mask. Result is stored in dst image.

  */
void vglClConvolution(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Direct copy from src to dst.

  */
void vglClCopy(VglImage* img_input, VglImage* img_output);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClDilate(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Erosion of src image by mask. Result is stored in dst image.

  */
void vglClErode(VglImage* img_input, VglImage* img_output, float* convolution_window, int window_size_x, int window_size_y);

/** Negative of src image. Result is stored in dst image.

  */
void vglClInvert(VglImage* img_input, VglImage* img_output);

/** Direct copy from src to dst.

  */
void vglClMax(VglImage* img_input1, VglImage* img_input2, VglImage* img_output);

/** Direct copy from src to dst.

  */
void vglClMin(VglImage* img_input1, VglImage* img_input2, VglImage* img_output);

/** Direct copy from src to dst.

  */
void vglClSub(VglImage* img_input1, VglImage* img_input2, VglImage* img_output);

/** Direct copy from src to dst.

  */
void vglClSum(VglImage* img_input1, VglImage* img_input2, VglImage* img_output);

/** Swap R and B channels.
  */
void vglClSwapRgb(VglImage* src, VglImage* dst);

/** Threshold of src image by float parameter. if the pixel is below thresh,
    the output is 0, else, the output is top. Result is stored in dst image.
  */
void vglClThreshold(VglImage* src, VglImage* dst, float thresh, float top = 1.0);
